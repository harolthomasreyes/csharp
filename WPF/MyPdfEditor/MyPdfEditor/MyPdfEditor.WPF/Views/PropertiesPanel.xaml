<Window x:Class="MyPdfEditor.MyPdfEditor.WPF.Views.PropertiesPanel"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyPdfEditor.MyPdfEditor.WPF.Views"
        mc:Ignorable="d"
        Title="PropertiesPanel" Height="450" Width="800">
    <Window.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />

        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="5,2" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="5,2" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="5,2" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="5,2" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style TargetType="Slider">
            <Setter Property="Margin" Value="5,2" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style TargetType="Button">
            <Setter Property="Margin" Value="5,2" />
            <Setter Property="Padding" Value="8,2" />
        </Style>
    </Window.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <StackPanel>
            <!-- Header -->
            <Border Background="#FF0078D7" Padding="10">
                <TextBlock Text="{Binding PanelTitle}" 
                          Foreground="White" 
                          FontWeight="Bold"
                          HorizontalAlignment="Center" />
            </Border>

            <!-- No Selection Message -->
            <TextBlock Text="No element selected" 
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Margin="20"
                      FontStyle="Italic"
                      Foreground="Gray"
                      Visibility="{Binding HasSelection, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=Invert}" />

            <!-- Multiple Selection Message -->
            <TextBlock Text="{Binding SelectionCount, StringFormat={}{0} items selected}" 
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Margin="20"
                      FontWeight="Bold"
                      Visibility="{Binding IsMultipleSelection, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <!-- Common Properties -->
            <Expander Header="General" IsExpanded="True"
                     Visibility="{Binding HasSelection, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid Margin="10,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Name:" />
                    <TextBox Grid.Row="0" Grid.Column="1" 
                             Text="{Binding FieldName, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="X Position:" />
                    <TextBox Grid.Row="1" Grid.Column="1" 
                             Text="{Binding PositionX, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Y Position:" />
                    <TextBox Grid.Row="2" Grid.Column="1" 
                             Text="{Binding PositionY, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Width:" />
                    <TextBox Grid.Row="3" Grid.Column="1" 
                             Text="{Binding FieldWidth, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="4" Grid.Column="0" Text="Height:" />
                    <TextBox Grid.Row="4" Grid.Column="1" 
                             Text="{Binding FieldHeight, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="5" Grid.Column="0" Text="Visible:" />
                    <CheckBox Grid.Row="5" Grid.Column="1" 
                              IsChecked="{Binding IsVisible}" />

                    <TextBlock Grid.Row="6" Grid.Column="0" Text="Read Only:" />
                    <CheckBox Grid.Row="6" Grid.Column="1" 
                              IsChecked="{Binding IsReadOnly}" />
                </Grid>
            </Expander>

            <!-- Appearance Properties -->
            <Expander Header="Appearance"
                     Visibility="{Binding HasSelection, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid Margin="10,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Border Color:" />
                    <TextBox Grid.Row="0" Grid.Column="1" 
                             Text="{Binding BorderColor, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Border Width:" />
                    <Slider Grid.Row="1" Grid.Column="1" 
                            Minimum="0" Maximum="10" 
                            Value="{Binding BorderWidth}" />
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding BorderWidth, StringFormat={}{0:F1}pt}"
                              HorizontalAlignment="Right" />

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Background:" />
                    <TextBox Grid.Row="2" Grid.Column="1" 
                             Text="{Binding BackgroundColor, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="3" Grid.Column="0" Text="ToolTip:" />
                    <TextBox Grid.Row="3" Grid.Column="1" 
                             Text="{Binding ToolTip, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
            </Expander>

            <!-- Text Field Properties -->
            <Expander Header="Text Properties"
                     IsExpanded="True"
                     Visibility="{Binding IsTextPropertiesVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid Margin="10,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Text:" />
                    <TextBox Grid.Row="0" Grid.Column="1" 
                             Text="{Binding TextValue, UpdateSourceTrigger=PropertyChanged}"
                             AcceptsReturn="True"
                             TextWrapping="Wrap"
                             MinHeight="60" />

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Font:" />
                    <ComboBox Grid.Row="1" Grid.Column="1" 
                              ItemsSource="{Binding AvailableFonts}"
                              SelectedItem="{Binding FontFamily}" />

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Size:" />
                    <ComboBox Grid.Row="2" Grid.Column="1" 
                              ItemsSource="{Binding FontSizes}"
                              SelectedItem="{Binding FontSize}" />

                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Color:" />
                    <TextBox Grid.Row="3" Grid.Column="1" 
                             Text="{Binding FontColor, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="4" Grid.Column="0" Text="Alignment:" />
                    <ComboBox Grid.Row="4" Grid.Column="1" 
                              ItemsSource="{Binding TextAlignments}"
                              SelectedItem="{Binding TextAlignment}" />

                    <TextBlock Grid.Row="5" Grid.Column="0" Text="Multiline:" />
                    <CheckBox Grid.Row="5" Grid.Column="1" 
                              IsChecked="{Binding IsMultiline}" />

                    <TextBlock Grid.Row="6" Grid.Column="0" Text="Max Length:" />
                    <TextBox Grid.Row="6" Grid.Column="1" 
                             Text="{Binding MaxLength, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
            </Expander>

            <!-- Checkbox Properties -->
            <Expander Header="Checkbox Properties"
                     Visibility="{Binding IsCheckboxPropertiesVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid Margin="10,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Checked:" />
                    <CheckBox Grid.Row="0" Grid.Column="1" 
                              IsChecked="{Binding IsChecked}" />

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Checked Symbol:" />
                    <TextBox Grid.Row="1" Grid.Column="1" 
                             Text="{Binding CheckedSymbol, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Check Color:" />
                    <TextBox Grid.Row="2" Grid.Column="1" 
                             Text="{Binding CheckMarkColor, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
            </Expander>

            <!-- Radio Button Properties -->
            <Expander Header="Radio Button Properties"
                     Visibility="{Binding IsRadioButtonPropertiesVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid Margin="10,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Selected:" />
                    <CheckBox Grid.Row="0" Grid.Column="1" 
                              IsChecked="{Binding IsSelected}" />

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Group Name:" />
                    <TextBox Grid.Row="1" Grid.Column="1" 
                             Text="{Binding GroupName, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Selected Symbol:" />
                    <TextBox Grid.Row="2" Grid.Column="1" 
                             Text="{Binding SelectedSymbol, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Selection Color:" />
                    <TextBox Grid.Row="3" Grid.Column="1" 
                             Text="{Binding SelectionColor, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
            </Expander>

            <!-- ComboBox Properties -->
            <Expander Header="Combo Box Properties"
                     Visibility="{Binding IsComboBoxPropertiesVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <StackPanel Margin="10,5">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Items:" />
                        <TextBox Grid.Row="0" Grid.Column="1" 
                                 Text="{Binding NewItemText, UpdateSourceTrigger=PropertyChanged}" />
                        <Button Grid.Row="0" Grid.Column="2" Content="Add"
                                Command="{Binding AddComboItemCommand}" />

                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Editable:" />
                        <CheckBox Grid.Row="1" Grid.Column="1" 
                                  IsChecked="{Binding IsEditable}" />
                    </Grid>

                    <ListBox ItemsSource="{Binding ComboItems}"
                             SelectedItem="{Binding SelectedComboItem}"
                             Height="100"
                             Margin="0,5">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding}" />
                                    <Button Content="×" Margin="5,0,0,0"
                                            Command="{Binding DataContext.RemoveComboItemCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                            CommandParameter="{Binding}"
                                            Padding="2" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </Expander>

            <!-- Action Buttons -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="10"
                       Visibility="{Binding HasSelection, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button Content="Delete" Command="{Binding DeleteCommand}"
                       Background="#FFD32F2F" Foreground="White" />
                <Button Content="Duplicate" Command="{Binding DuplicateCommand}"
                       Margin="5,0" />
            </StackPanel>
        </StackPanel>
    </ScrollViewer>
</Window>
